"use strict";(self.webpackChunkkamiwaza_docs=self.webpackChunkkamiwaza_docs||[]).push([[1430],{68485:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"models/deployment","title":"Model Deployment","description":"The model deployment process in Kamiwaza is designed to be simple and robust.","source":"@site/docs/models/deployment.md","sourceDirName":"models","slug":"/models/deployment","permalink":"/kamiwaza-docs/models/deployment","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"mainSidebar","previous":{"title":"Downloading Models","permalink":"/kamiwaza-docs/models/downloading-models"},"next":{"title":"Model Deployment Troubleshooting","permalink":"/kamiwaza-docs/models/troubleshooting"}}');var o=i(74848),l=i(28453);const t={sidebar_position:3},r="Model Deployment",a={},d=[{value:"Deployment lifecycle statuses",id:"deployment-lifecycle-statuses",level:2},{value:"Error codes and what to do",id:"error-codes-and-what-to-do",level:2},{value:"Viewing logs and diagnostics",id:"viewing-logs-and-diagnostics",level:2},{value:"Tips for Novice mode",id:"tips-for-novice-mode",level:2},{value:"When to retry vs. change configuration",id:"when-to-retry-vs-change-configuration",level:2},{value:"How routing works",id:"how-routing-works",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"model-deployment",children:"Model Deployment"})}),"\n",(0,o.jsx)(n.p,{children:"The model deployment process in Kamiwaza is designed to be simple and robust."}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Initiate Deployment"}),": When you request to deploy a model, Kamiwaza's ",(0,o.jsx)(n.code,{children:"Models Service"})," takes over."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Engine Selection"}),": The platform automatically determines the best engine based on your hardware, operating system, and the model's file format. For example, on a Mac with an M2 chip, a ",(0,o.jsx)(n.code,{children:".gguf"})," file will be deployed with ",(0,o.jsx)(n.code,{children:"llama.cpp"}),", while ",(0,o.jsx)(n.code,{children:".safetensors"})," will use ",(0,o.jsx)(n.code,{children:"MLX"}),". You can also override this and specify an engine manually."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Resource Allocation"}),": The system allocates a network port and configures the load balancer (Traefik) to route requests to the new model endpoint."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Launch"}),": The selected engine is started. For ",(0,o.jsx)(n.code,{children:"vLLM"})," on Linux, this is a Docker container. For ",(0,o.jsx)(n.code,{children:"MLX"})," on macOS, it's a native process."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Health Check"}),": Kamiwaza monitors the model until it is healthy and ready to serve traffic."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Once deployed, your model is available via a standard API endpoint."}),"\n",(0,o.jsx)(n.h2,{id:"deployment-lifecycle-statuses",children:"Deployment lifecycle statuses"}),"\n",(0,o.jsx)(n.p,{children:"Below are the deployment and instance statuses you may see, with what they mean and what (if anything) you should do."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"REQUESTED: The deployment request was accepted and recorded."}),"\n",(0,o.jsx)(n.li,{children:"DEPLOYING: Kamiwaza is creating the Ray Serve app (if applicable) and preparing routing."}),"\n",(0,o.jsx)(n.li,{children:"INITIALIZING: Routing is up and the model server is reachable, but the model is still loading or not yet ready. Normal for a short period right after launch."}),"\n",(0,o.jsx)(n.li,{children:"DEPLOYED: The deployment is healthy and ready to serve traffic."}),"\n",(0,o.jsx)(n.li,{children:"STOPPED: The deployment was stopped (either by a user action or system shutdown)."}),"\n",(0,o.jsx)(n.li,{children:"ERROR: A recoverable problem was detected. Often resolves after a change or retry. See error code guidance below."}),"\n",(0,o.jsx)(n.li,{children:"FAILED: A terminal failure was detected (e.g., out-of-memory). Requires user action to resolve."}),"\n",(0,o.jsx)(n.li,{children:"MUST_REDOWNLOAD: Required weights are missing locally in community installs. Re-download the model and deploy again."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Instance-level statuses (for replicas):"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"REQUESTED: An instance record was created and is queued to start."}),"\n",(0,o.jsx)(n.li,{children:"COPYING_FILES: Required files are being synced to the node."}),"\n",(0,o.jsx)(n.li,{children:"STARTING: The container/process is launching and has not passed health checks yet."}),"\n",(0,o.jsx)(n.li,{children:"DEPLOYED (instance): The process is up and responding."}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"error-codes-and-what-to-do",children:"Error codes and what to do"}),"\n",(0,o.jsx)(n.p,{children:"If a deployment shows ERROR or FAILED, the UI may show a short error code and message. Common codes:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"OOM (Out of Memory): Reduce context size, select a smaller model/variant, or lower GPU memory utilization."}),"\n",(0,o.jsx)(n.li,{children:"CUDA_ERROR: Check GPU drivers/availability; restart GPU services or the host if needed; ensure the container has GPU access."}),"\n",(0,o.jsx)(n.li,{children:"MODEL_LOADING_FAILURE: Verify that all model files exist, are accessible, and match the expected version; try re-downloading."}),"\n",(0,o.jsx)(n.li,{children:"CONTAINER_EXITED: The runtime process crashed. Open logs for details; check memory limits, incompatible flags, or driver issues."}),"\n",(0,o.jsx)(n.li,{children:"RUNTIME_ERROR: A generic runtime exception was seen in logs. Open logs for specifics."}),"\n",(0,o.jsx)(n.li,{children:"STARTUP_TIMEOUT: The model did not become ready within the expected time. Try a smaller model/context or adjust engine parameters."}),"\n",(0,o.jsx)(n.li,{children:"MUST_REDOWNLOAD: Files missing locally (community installs). Re-download the model and retry."}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"viewing-logs-and-diagnostics",children:"Viewing logs and diagnostics"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"In the advanced UI, open a deployment row and click \u201cView logs\u201d to see container logs and auto-detected issue patterns (OOM, CUDA errors, etc.)."}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"tips-for-novice-mode",children:"Tips for Novice mode"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["If you hit OOM or STARTUP_TIMEOUT, try:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Selecting a smaller preset (model/variant)"}),"\n",(0,o.jsx)(n.li,{children:"Reducing context size (the UI will suggest balanced options)"}),"\n",(0,o.jsx)(n.li,{children:"Re-deploying after downloads complete"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"when-to-retry-vs-change-configuration",children:"When to retry vs. change configuration"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Retry directly if you see transient ERROR without an error code."}),"\n",(0,o.jsx)(n.li,{children:"Change configuration if you see a clear code like OOM, MODEL_LOADING_FAILURE, CONTAINER_EXITED, or STARTUP_TIMEOUT."}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"how-routing-works",children:"How routing works"}),"\n",(0,o.jsx)(n.p,{children:"Kamiwaza wires the public port to Ray Serve for model traffic. Routes can be created immediately after launch; Ray Serve handles readiness internally. This is why you may see INITIALIZING briefly before DEPLOYED."})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>r});var s=i(96540);const o={},l=s.createContext(o);function t(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);