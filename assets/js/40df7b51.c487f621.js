"use strict";(self.webpackChunkkamiwaza_docs=self.webpackChunkkamiwaza_docs||[]).push([[8796],{7716:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"services/openai/README","title":"OpenAI Service","description":"Overview","source":"@site/sdk/services/openai/README.md","sourceDirName":"services/openai","slug":"/services/openai/","permalink":"/kamiwaza-docs/sdk/services/openai/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1}}');var s=i(74848),l=i(28453);const r={sidebar_position:1},o="OpenAI Service",a={},c=[{value:"Overview",id:"overview",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Usage",id:"usage",level:2},{value:"Getting an OpenAI Client",id:"getting-an-openai-client",level:3},{value:"Using the OpenAI Client",id:"using-the-openai-client",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"Notes",id:"notes",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"openai-service",children:"OpenAI Service"})}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsxs)(n.p,{children:["The OpenAI Service (",(0,s.jsx)(n.code,{children:"OpenAIService"}),") provides OpenAI API compatibility for Kamiwaza model deployments. This service allows you to use your Kamiwaza-deployed models with the familiar OpenAI Python SDK interface."]}),"\n",(0,s.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"OpenAI API compatibility"}),"\n",(0,s.jsx)(n.li,{children:"Automatic deployment discovery"}),"\n",(0,s.jsx)(n.li,{children:"Configurable SSL verification"}),"\n",(0,s.jsx)(n.li,{children:"Support for multiple targeting methods (model name, deployment ID, or direct endpoint)"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.h3,{id:"getting-an-openai-client",children:"Getting an OpenAI Client"}),"\n",(0,s.jsx)(n.p,{children:"The service provides several ways to get an OpenAI client for your deployments:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# Initialize Kamiwaza client\nclient = KamiwazaClient("https://prod.kamiwaza.ai/api/")\n\n# Get client by model name\nopenai_client = client.openai.get_client(model="Owen2.5-72B-Instruct-GPTQ-Int4")\n\n# Get client by deployment ID\nopenai_client = client.openai.get_client(deployment_id="your-deployment-uuid")\n\n# Get client by direct endpoint\nopenai_client = client.openai.get_client(endpoint="http://your-endpoint:port/v1")\n'})}),"\n",(0,s.jsx)(n.h3,{id:"using-the-openai-client",children:"Using the OpenAI Client"}),"\n",(0,s.jsx)(n.p,{children:"Once you have an OpenAI client, you can use it just like you would use the official OpenAI SDK:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# Create a chat completion\nresponse = openai_client.chat.completions.create(\n    messages=[\n        {"role": "user", "content": "Say hello in Chinese!"}\n    ],\n    model="model"   \n)\n\n# Access the response\nprint(response.choices[0].message.content)\n'})}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Use model name targeting when you want automatic failover between multiple deployments of the same model"}),"\n",(0,s.jsx)(n.li,{children:"Use deployment ID targeting when you need to ensure you're using a specific deployment"}),"\n",(0,s.jsx)(n.li,{children:"Use direct endpoint targeting when you need to bypass deployment discovery"}),"\n",(0,s.jsx)(n.li,{children:"Keep the same SSL verification settings as your main Kamiwaza client for consistency"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'try:\n    openai_client = client.openai.get_client(model="my-model")\nexcept ValueError as e:\n    print(f"No active deployment found: {e}")\nexcept APIError as e:\n    print(f"API error occurred: {e}")\n'})}),"\n",(0,s.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The OpenAI client is configured with ",(0,s.jsx)(n.code,{children:'api_key="local"'})," since authentication is handled by the Kamiwaza client"]}),"\n",(0,s.jsx)(n.li,{children:"SSL verification settings are inherited from your Kamiwaza client configuration"}),"\n",(0,s.jsx)(n.li,{children:"The model parameter in OpenAI API calls is ignored since the model is determined by the deployment"}),"\n",(0,s.jsx)(n.li,{children:"All standard OpenAI SDK features (retries, timeouts, etc.) are availables"}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var t=i(96540);const s={},l=t.createContext(s);function r(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);