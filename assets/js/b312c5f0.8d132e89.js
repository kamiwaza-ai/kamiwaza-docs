"use strict";(self.webpackChunkkamiwaza_docs=self.webpackChunkkamiwaza_docs||[]).push([[3573],{9650:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>r});const s=JSON.parse('{"id":"models/downloading-models","title":"Downloading Models","description":"Model Search and Discovery","source":"@site/versioned_docs/version-0.5.1/models/downloading-models.md","sourceDirName":"models","slug":"/models/downloading-models","permalink":"/0.5.1/models/downloading-models","draft":false,"unlisted":false,"tags":[],"version":"0.5.1","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"mainSidebar","previous":{"title":"GUI Walkthrough","permalink":"/0.5.1/models/gui-walkthrough"},"next":{"title":"Model Deployment","permalink":"/0.5.1/models/deployment"}}');var i=n(74848),l=n(28453);const d={sidebar_position:2},t="Downloading Models",a={},r=[{value:"Model Search and Discovery",id:"model-search-and-discovery",level:2},{value:"Downloading Models",id:"downloading-models-1",level:3}];function c(e){const o={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(o.header,{children:(0,i.jsx)(o.h1,{id:"downloading-models",children:"Downloading Models"})}),"\n",(0,i.jsx)(o.h2,{id:"model-search-and-discovery",children:"Model Search and Discovery"}),"\n",(0,i.jsxs)(o.p,{children:["Kamiwaza is integrated directly with the Hugging Face Hub, allowing you to access a vast collection of open-source models. Models are identified by their Hugging Face repository ID, such as ",(0,i.jsx)(o.code,{children:"meta-llama/Llama-3.3-70B-Instruct"}),"."]}),"\n",(0,i.jsx)(o.h3,{id:"downloading-models-1",children:"Downloading Models"}),"\n",(0,i.jsx)(o.p,{children:"When you select a model to deploy, Kamiwaza handles the download process for you:"}),"\n",(0,i.jsxs)(o.ol,{children:["\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.strong,{children:"Find the Model"}),": The system first checks if the model already exists locally. If not, it searches the Hugging Face Hub for the specified repository ID."]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.strong,{children:"File Selection"}),": For repositories containing multiple file types, you will want to select the most appropriate files for your hardware. For example, when running on hardware without a GPU, you can select and download specific GGUF files (",(0,i.jsx)(o.code,{children:"q6_k"}),", ",(0,i.jsx)(o.code,{children:"q5_k_m"}),", etc.) for optimal performance with the ",(0,i.jsx)(o.code,{children:"llama.cpp"})," engine. On a Linux server with GPUs, you may opt to download the standard model files (like ",(0,i.jsx)(o.code,{children:".safetensors"}),") for use with the ",(0,i.jsx)(o.code,{children:"vLLM"})," engine."]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.strong,{children:"Local Caching"}),": All downloaded model files are stored in a local cache directory on the platform. This means that subsequent requests for the same model will not require a new download, making deployments faster."]}),"\n"]}),"\n",(0,i.jsx)(o.p,{children:"Once a model's files are downloaded and verified, they are registered within Kamiwaza and become available for deployment."})]})}function h(e={}){const{wrapper:o}={...(0,l.R)(),...e.components};return o?(0,i.jsx)(o,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,o,n)=>{n.d(o,{R:()=>d,x:()=>t});var s=n(96540);const i={},l=s.createContext(i);function d(e){const o=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function t(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(l.Provider,{value:o},e.children)}}}]);