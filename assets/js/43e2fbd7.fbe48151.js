"use strict";(self.webpackChunkkamiwaza_docs=self.webpackChunkkamiwaza_docs||[]).push([[3218],{16189:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"services/retrieval/README","title":"Retrieval Service","description":"Overview","source":"@site/sdk/services/retrieval/README.md","sourceDirName":"services/retrieval","slug":"/services/retrieval/","permalink":"/sdk/services/retrieval/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"sdk","previous":{"title":"Model Service","permalink":"/sdk/services/models/"},"next":{"title":"Serving Service","permalink":"/sdk/services/serving/"}}');var s=n(74848),t=n(28453);const c={sidebar_position:1},l="Retrieval Service",a={},o=[{value:"Overview",id:"overview",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Text Chunk Retrieval",id:"text-chunk-retrieval",level:2},{value:"Available Methods",id:"available-methods",level:3},{value:"Integration with Other Services",id:"integration-with-other-services",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Performance Considerations",id:"performance-considerations",level:2}];function d(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"retrieval-service",children:"Retrieval Service"})}),"\n",(0,s.jsx)(r.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsxs)(r.p,{children:["The Retrieval Service (",(0,s.jsx)(r.code,{children:"RetrievalService"}),") provides text chunk retrieval functionality for the Kamiwaza AI Platform. Located in ",(0,s.jsx)(r.code,{children:"kamiwaza_client/services/retrieval.py"}),", this service handles the retrieval of relevant text chunks based on queries, enabling efficient information retrieval."]}),"\n",(0,s.jsx)(r.h2,{id:"key-features",children:"Key Features"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Relevant Text Chunk Retrieval"}),"\n",(0,s.jsx)(r.li,{children:"Query-based Search"}),"\n",(0,s.jsx)(r.li,{children:"Integration with Vector Database"}),"\n",(0,s.jsx)(r.li,{children:"Semantic Search Capabilities"}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"text-chunk-retrieval",children:"Text Chunk Retrieval"}),"\n",(0,s.jsx)(r.h3,{id:"available-methods",children:"Available Methods"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"retrieve_relevant_chunks(query: str, k: int = 5) -> List[TextChunk]"}),": Get relevant text chunks based on query"]}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:'# Retrieve relevant chunks\r\nchunks = client.retrieval.retrieve_relevant_chunks(\r\n    query="What is machine learning?",\r\n    k=5  # Number of chunks to retrieve\r\n)\r\n\r\n# Process retrieved chunks\r\nfor chunk in chunks:\r\n    print(f"Text: {chunk.text}")\r\n    print(f"Score: {chunk.score}")\r\n    print(f"Source: {chunk.metadata.get(\'source\')}")\n'})}),"\n",(0,s.jsx)(r.h2,{id:"integration-with-other-services",children:"Integration with Other Services"}),"\n",(0,s.jsx)(r.p,{children:"The Retrieval Service works in conjunction with:"}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsxs)(r.li,{children:["Embedding Service","\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"For converting queries into vector representations"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["VectorDB Service","\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"For performing similarity search"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["Ingestion Service","\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"For accessing processed and stored text chunks"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,s.jsx)(r.p,{children:"The service includes built-in error handling for common scenarios:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:'try:\r\n    chunks = client.retrieval.retrieve_relevant_chunks(\r\n        query="example query"\r\n    )\r\nexcept VectorDBError:\r\n    print("Vector database error")\r\nexcept EmbeddingError:\r\n    print("Embedding generation error")\r\nexcept APIError as e:\r\n    print(f"Operation failed: {e}")\n'})}),"\n",(0,s.jsx)(r.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsx)(r.li,{children:"Use specific and focused queries"}),"\n",(0,s.jsx)(r.li,{children:"Adjust the number of chunks (k) based on your needs"}),"\n",(0,s.jsx)(r.li,{children:"Consider chunk relevance scores"}),"\n",(0,s.jsx)(r.li,{children:"Process chunks in order of relevance"}),"\n",(0,s.jsx)(r.li,{children:"Handle empty result sets appropriately"}),"\n",(0,s.jsx)(r.li,{children:"Implement proper error handling"}),"\n",(0,s.jsx)(r.li,{children:"Consider caching frequently retrieved chunks"}),"\n",(0,s.jsx)(r.li,{children:"Monitor retrieval performance"}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Query length affects retrieval time"}),"\n",(0,s.jsx)(r.li,{children:"Number of chunks (k) impacts response time"}),"\n",(0,s.jsx)(r.li,{children:"Vector database size influences search speed"}),"\n",(0,s.jsx)(r.li,{children:"Embedding generation adds processing overhead"}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>c,x:()=>l});var i=n(96540);const s={},t=i.createContext(s);function c(e){const r=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(t.Provider,{value:r},e.children)}}}]);