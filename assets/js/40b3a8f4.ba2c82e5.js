"use strict";(self.webpackChunkkamiwaza_docs=self.webpackChunkkamiwaza_docs||[]).push([[4607],{97864:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"services/cluster/README","title":"Cluster Service","description":"Overview","source":"@site/sdk/services/cluster/README.md","sourceDirName":"services/cluster","slug":"/services/cluster/","permalink":"/kamiwaza-docs/sdk/services/cluster/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"sdk","previous":{"title":"Catalog Service","permalink":"/kamiwaza-docs/sdk/services/catalog/"},"next":{"title":"Embedding Service","permalink":"/kamiwaza-docs/sdk/services/embedding/"}}');var t=i(74848),l=i(28453);const a={sidebar_position:1},s="Cluster Service",c={},o=[{value:"Overview",id:"overview",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Location Management",id:"location-management",level:2},{value:"Available Methods",id:"available-methods",level:3},{value:"Cluster Management",id:"cluster-management",level:2},{value:"Available Methods",id:"available-methods-1",level:3},{value:"Node Management",id:"node-management",level:2},{value:"Available Methods",id:"available-methods-2",level:3},{value:"Hardware Management",id:"hardware-management",level:2},{value:"Available Methods",id:"available-methods-3",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Performance Considerations",id:"performance-considerations",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"cluster-service",children:"Cluster Service"})}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(n.p,{children:["The Cluster Service (",(0,t.jsx)(n.code,{children:"ClusterService"}),") provides comprehensive cluster and infrastructure management for the Kamiwaza AI Platform. Located in ",(0,t.jsx)(n.code,{children:"kamiwaza_client/services/cluster.py"}),", this service handles location management, cluster operations, node management, and hardware configuration."]}),"\n",(0,t.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Location Management"}),"\n",(0,t.jsx)(n.li,{children:"Cluster Operations"}),"\n",(0,t.jsx)(n.li,{children:"Node Management"}),"\n",(0,t.jsx)(n.li,{children:"Hardware Configuration"}),"\n",(0,t.jsx)(n.li,{children:"Runtime Configuration"}),"\n",(0,t.jsx)(n.li,{children:"Hostname Management"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"location-management",children:"Location Management"}),"\n",(0,t.jsx)(n.h3,{id:"available-methods",children:"Available Methods"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"create_location(location: CreateLocation) -> Location"}),": Create new location"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"update_location(location_id: UUID, location: UpdateLocation) -> Location"}),": Update location"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"get_location(location_id: UUID) -> Location"}),": Get location info"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"list_locations() -> List[Location]"}),": List all locations"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# Create new location\nlocation = client.cluster.create_location(CreateLocation(\n    name="us-west",\n    provider="aws",\n    region="us-west-2"\n))\n\n# Update location\nupdated = client.cluster.update_location(\n    location_id=location.id,\n    location=UpdateLocation(name="us-west-prod")\n)\n\n# Get location details\nlocation = client.cluster.get_location(location_id)\n\n# List all locations\nlocations = client.cluster.list_locations()\n'})}),"\n",(0,t.jsx)(n.h2,{id:"cluster-management",children:"Cluster Management"}),"\n",(0,t.jsx)(n.h3,{id:"available-methods-1",children:"Available Methods"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"create_cluster(cluster: CreateCluster) -> Cluster"}),": Create new cluster"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"get_cluster(cluster_id: UUID) -> Cluster"}),": Get cluster info"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"list_clusters() -> List[Cluster]"}),": List all clusters"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"get_hostname() -> str"}),": Get cluster hostname"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# Create new cluster\ncluster = client.cluster.create_cluster(CreateCluster(\n    name="training-cluster",\n    location_id=location_id,\n    node_count=3\n))\n\n# Get cluster info\ncluster = client.cluster.get_cluster(cluster_id)\n\n# List clusters\nclusters = client.cluster.list_clusters()\n\n# Get hostname\nhostname = client.cluster.get_hostname()\n'})}),"\n",(0,t.jsx)(n.h2,{id:"node-management",children:"Node Management"}),"\n",(0,t.jsx)(n.h3,{id:"available-methods-2",children:"Available Methods"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"get_node_by_id(node_id: UUID) -> Node"}),": Get node info"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"get_running_nodes() -> List[Node]"}),": List running nodes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"list_nodes() -> List[Node]"}),": List all nodes"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# Get node details\nnode = client.cluster.get_node_by_id(node_id)\n\n# List running nodes\nrunning_nodes = client.cluster.get_running_nodes()\n\n# List all nodes\nall_nodes = client.cluster.list_nodes()\n"})}),"\n",(0,t.jsx)(n.h2,{id:"hardware-management",children:"Hardware Management"}),"\n",(0,t.jsx)(n.h3,{id:"available-methods-3",children:"Available Methods"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"create_hardware(hardware: CreateHardware) -> Hardware"}),": Create hardware entry"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"get_hardware(hardware_id: UUID) -> Hardware"}),": Get hardware info"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"list_hardware() -> List[Hardware]"}),": List hardware entries"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"get_runtime_config() -> RuntimeConfig"}),": Get runtime configuration"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# Create hardware entry\nhardware = client.cluster.create_hardware(CreateHardware(\n    name="gpu-node",\n    gpu_count=4,\n    gpu_type="nvidia-a100"\n))\n\n# Get hardware info\nhardware = client.cluster.get_hardware(hardware_id)\n\n# List hardware\nhardware_list = client.cluster.list_hardware()\n\n# Get runtime config\nconfig = client.cluster.get_runtime_config()\n'})}),"\n",(0,t.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,t.jsx)(n.p,{children:"The service includes built-in error handling for common scenarios:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'try:\n    cluster = client.cluster.create_cluster(cluster_config)\nexcept LocationNotFoundError:\n    print("Location not found")\nexcept ResourceError as e:\n    print(f"Resource allocation failed: {e}")\nexcept APIError as e:\n    print(f"Operation failed: {e}")\n'})}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Validate location existence before cluster creation"}),"\n",(0,t.jsx)(n.li,{children:"Monitor node health regularly"}),"\n",(0,t.jsx)(n.li,{children:"Use appropriate hardware configurations"}),"\n",(0,t.jsx)(n.li,{children:"Implement proper error handling"}),"\n",(0,t.jsx)(n.li,{children:"Clean up unused resources"}),"\n",(0,t.jsx)(n.li,{children:"Consider resource limits"}),"\n",(0,t.jsx)(n.li,{children:"Monitor cluster performance"}),"\n",(0,t.jsx)(n.li,{children:"Use meaningful naming conventions"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Node count affects cluster performance"}),"\n",(0,t.jsx)(n.li,{children:"Hardware configuration impacts resource availability"}),"\n",(0,t.jsx)(n.li,{children:"Location selection influences latency"}),"\n",(0,t.jsx)(n.li,{children:"Runtime configuration affects resource utilization"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>s});var r=i(96540);const t={},l=r.createContext(t);function a(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);