"use strict";(self.webpackChunkkamiwaza_docs=self.webpackChunkkamiwaza_docs||[]).push([[7735],{6399:(e,l,n)=>{n.r(l),n.d(l,{assets:()=>r,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>t});const i=JSON.parse('{"id":"services/models/README","title":"Model Service","description":"Overview","source":"@site/sdk/services/models/README.md","sourceDirName":"services/models","slug":"/services/models/","permalink":"/kamiwaza-docs/sdk/services/models/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"sdk","previous":{"title":"Lab Service","permalink":"/kamiwaza-docs/sdk/services/lab/"},"next":{"title":"Retrieval Service","permalink":"/kamiwaza-docs/sdk/services/retrieval/"}}');var d=n(4848),o=n(8453);const s={sidebar_position:1},a="Model Service",r={},t=[{value:"Overview",id:"overview",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Model Management",id:"model-management",level:2},{value:"Basic Operations",id:"basic-operations",level:3},{value:"Model Search",id:"model-search",level:3},{value:"Model Download Management",id:"model-download-management",level:2},{value:"Available Methods",id:"available-methods",level:3},{value:"Model File Management",id:"model-file-management",level:2},{value:"Available Methods",id:"available-methods-1",level:3},{value:"Model Configuration Management",id:"model-configuration-management",level:2},{value:"Available Methods",id:"available-methods-2",level:3},{value:"Memory Usage Tracking",id:"memory-usage-tracking",level:2},{value:"Available Methods",id:"available-methods-3",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Best Practices",id:"best-practices",level:2}];function c(e){const l={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(l.header,{children:(0,d.jsx)(l.h1,{id:"model-service",children:"Model Service"})}),"\n",(0,d.jsx)(l.h2,{id:"overview",children:"Overview"}),"\n",(0,d.jsxs)(l.p,{children:["The Model Service (",(0,d.jsx)(l.code,{children:"ModelService"}),") provides comprehensive model management functionality for the Kamiwaza AI Platform. Located in ",(0,d.jsx)(l.code,{children:"kamiwaza_client/services/models.py"}),", this service handles model lifecycle management, including creation, deployment, file management, and configuration."]}),"\n",(0,d.jsx)(l.h2,{id:"key-features",children:"Key Features"}),"\n",(0,d.jsxs)(l.ul,{children:["\n",(0,d.jsx)(l.li,{children:"Model Management (CRUD operations)"}),"\n",(0,d.jsx)(l.li,{children:"Model File Management"}),"\n",(0,d.jsx)(l.li,{children:"Model Search and Discovery"}),"\n",(0,d.jsx)(l.li,{children:"Model Download Management"}),"\n",(0,d.jsx)(l.li,{children:"Model Configuration Management"}),"\n",(0,d.jsx)(l.li,{children:"Memory Usage Tracking"}),"\n"]}),"\n",(0,d.jsx)(l.h2,{id:"model-management",children:"Model Management"}),"\n",(0,d.jsx)(l.h3,{id:"basic-operations",children:"Basic Operations"}),"\n",(0,d.jsx)(l.pre,{children:(0,d.jsx)(l.code,{className:"language-python",children:'# Get a specific model\nmodel = client.models.get_model(model_id)\n\n# Create a new model\nmodel = client.models.create_model(CreateModel(\n    name="my-model",\n    description="My custom model"\n))\n\n# List all models\nmodels = client.models.list_models(load_files=True)\n\n# Delete a model\nclient.models.delete_model(model_id)\n'})}),"\n",(0,d.jsx)(l.h3,{id:"model-search",children:"Model Search"}),"\n",(0,d.jsx)(l.pre,{children:(0,d.jsx)(l.code,{className:"language-python",children:'# Search for models\nmodels = client.models.search_models(\n    query="bert",\n    exact=False,\n    limit=100,\n    hubs_to_search=["huggingface"]\n)\n\n# Get model by repo ID\nmodel = client.models.get_model_by_repo_id("bert-base-uncased")\n'})}),"\n",(0,d.jsx)(l.h2,{id:"model-download-management",children:"Model Download Management"}),"\n",(0,d.jsx)(l.h3,{id:"available-methods",children:"Available Methods"}),"\n",(0,d.jsxs)(l.ul,{children:["\n",(0,d.jsxs)(l.li,{children:[(0,d.jsx)(l.code,{children:"initiate_model_download(repo_id: str, quantization: str = 'q6_k') -> Dict[str, Any]"}),": Start model download"]}),"\n",(0,d.jsxs)(l.li,{children:[(0,d.jsx)(l.code,{children:"check_download_status(repo_id: str) -> List[ModelDownloadStatus]"}),": Check download progress"]}),"\n",(0,d.jsxs)(l.li,{children:[(0,d.jsx)(l.code,{children:"get_model_files_download_status(repo_model_id: str) -> List[ModelDownloadStatus]"}),": Get detailed file status"]}),"\n"]}),"\n",(0,d.jsx)(l.pre,{children:(0,d.jsx)(l.code,{className:"language-python",children:'# Download a model\ndownload_info = client.models.initiate_model_download(\n    repo_id="llama2-7b",\n    quantization="q6_k"\n)\n\n# Check download status\nstatus = client.models.check_download_status("llama2-7b")\n'})}),"\n",(0,d.jsx)(l.h2,{id:"model-file-management",children:"Model File Management"}),"\n",(0,d.jsx)(l.h3,{id:"available-methods-1",children:"Available Methods"}),"\n",(0,d.jsxs)(l.ul,{children:["\n",(0,d.jsxs)(l.li,{children:[(0,d.jsx)(l.code,{children:"delete_model_file(model_file_id: UUID) -> dict"}),": Delete a model file"]}),"\n",(0,d.jsxs)(l.li,{children:[(0,d.jsx)(l.code,{children:"get_model_file(model_file_id: UUID) -> ModelFile"}),": Get file details"]}),"\n",(0,d.jsxs)(l.li,{children:[(0,d.jsx)(l.code,{children:"get_model_files_by_model_id(model_id: UUID) -> List[ModelFile]"}),": Get all files for a model"]}),"\n",(0,d.jsxs)(l.li,{children:[(0,d.jsx)(l.code,{children:"list_model_files() -> List[ModelFile]"}),": List all model files"]}),"\n",(0,d.jsxs)(l.li,{children:[(0,d.jsx)(l.code,{children:"create_model_file(model_file: CreateModelFile) -> ModelFile"}),": Create new model file"]}),"\n",(0,d.jsxs)(l.li,{children:[(0,d.jsx)(l.code,{children:"search_hub_model_files(search_request: HubModelFileSearch) -> List[ModelFile]"}),": Search hub files"]}),"\n",(0,d.jsxs)(l.li,{children:[(0,d.jsx)(l.code,{children:"get_model_file_memory_usage(model_file_id: UUID) -> int"}),": Get file memory usage"]}),"\n"]}),"\n",(0,d.jsx)(l.pre,{children:(0,d.jsx)(l.code,{className:"language-python",children:'# List model files\nfiles = client.models.list_model_files()\n\n# Get files for specific model\nmodel_files = client.models.get_model_files_by_model_id(model_id)\n\n# Search hub files\nfiles = client.models.search_hub_model_files(HubModelFileSearch(\n    hub="huggingface",\n    model="bert-base-uncased"\n))\n'})}),"\n",(0,d.jsx)(l.h2,{id:"model-configuration-management",children:"Model Configuration Management"}),"\n",(0,d.jsx)(l.h3,{id:"available-methods-2",children:"Available Methods"}),"\n",(0,d.jsxs)(l.ul,{children:["\n",(0,d.jsxs)(l.li,{children:[(0,d.jsx)(l.code,{children:"create_model_config(config: CreateModelConfig) -> ModelConfig"}),": Create new config"]}),"\n",(0,d.jsxs)(l.li,{children:[(0,d.jsx)(l.code,{children:"get_model_configs(model_id: UUID) -> List[ModelConfig]"}),": Get all configs"]}),"\n",(0,d.jsxs)(l.li,{children:[(0,d.jsx)(l.code,{children:"get_model_configs_for_model(model_id: UUID, default: bool = False) -> List[ModelConfig]"}),": Get model configs"]}),"\n"]}),"\n",(0,d.jsx)(l.pre,{children:(0,d.jsx)(l.code,{className:"language-python",children:'# Create model configuration\nconfig = client.models.create_model_config(CreateModelConfig(\n    model_id=model_id,\n    parameters={"temperature": 0.7}\n))\n\n# Get configurations for model\nconfigs = client.models.get_model_configs(model_id)\n'})}),"\n",(0,d.jsx)(l.h2,{id:"memory-usage-tracking",children:"Memory Usage Tracking"}),"\n",(0,d.jsx)(l.h3,{id:"available-methods-3",children:"Available Methods"}),"\n",(0,d.jsxs)(l.ul,{children:["\n",(0,d.jsxs)(l.li,{children:[(0,d.jsx)(l.code,{children:"get_model_memory_usage(model_id: UUID) -> int"}),": Get model memory usage"]}),"\n",(0,d.jsxs)(l.li,{children:[(0,d.jsx)(l.code,{children:"get_model_file_memory_usage(model_file_id: UUID) -> int"}),": Get file memory usage"]}),"\n"]}),"\n",(0,d.jsx)(l.pre,{children:(0,d.jsx)(l.code,{className:"language-python",children:"# Check model memory usage\nmemory_usage = client.models.get_model_memory_usage(model_id)\n"})}),"\n",(0,d.jsx)(l.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,d.jsx)(l.p,{children:"The service includes built-in error handling for common scenarios:"}),"\n",(0,d.jsx)(l.pre,{children:(0,d.jsx)(l.code,{className:"language-python",children:'try:\n    model = client.models.get_model(model_id)\nexcept APIError as e:\n    print(f"Operation failed: {e}")\n'})}),"\n",(0,d.jsx)(l.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,d.jsxs)(l.ol,{children:["\n",(0,d.jsx)(l.li,{children:"Always check model compatibility before downloading"}),"\n",(0,d.jsx)(l.li,{children:"Monitor download status for large models"}),"\n",(0,d.jsx)(l.li,{children:"Use appropriate quantization for your use case"}),"\n",(0,d.jsx)(l.li,{children:"Clean up unused model files to manage storage"}),"\n",(0,d.jsx)(l.li,{children:"Keep track of model configurations"}),"\n",(0,d.jsx)(l.li,{children:"Monitor memory usage for large models"}),"\n"]})]})}function m(e={}){const{wrapper:l}={...(0,o.R)(),...e.components};return l?(0,d.jsx)(l,{...e,children:(0,d.jsx)(c,{...e})}):c(e)}},8453:(e,l,n)=>{n.d(l,{R:()=>s,x:()=>a});var i=n(6540);const d={},o=i.createContext(d);function s(e){const l=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function a(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:s(e.components),i.createElement(o.Provider,{value:l},e.children)}}}]);