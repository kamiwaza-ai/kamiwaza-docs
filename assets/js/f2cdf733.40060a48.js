"use strict";(self.webpackChunkkamiwaza_docs=self.webpackChunkkamiwaza_docs||[]).push([[2569],{94821:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"architecture/overview","title":"Platform Architecture Overview","description":"Kamiwaza is a modular, multi-layered platform designed for scalability, flexibility, and enterprise-grade performance. This document provides a high-level overview of its key architectural components and the technologies that power them.","source":"@site/versioned_docs/version-0.5.1/architecture/overview.md","sourceDirName":"architecture","slug":"/architecture/overview","permalink":"/0.5.1/architecture/overview","draft":false,"unlisted":false,"tags":[],"version":"0.5.1","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"mainSidebar","previous":{"title":"Building a RAG Pipeline","permalink":"/0.5.1/use-cases/building-a-rag-pipeline"},"next":{"title":"Core Components & Concepts","permalink":"/0.5.1/architecture/components"}}');var a=n(74848),t=n(28453);const s={sidebar_position:1},c="Platform Architecture Overview",o={},l=[{value:"System Architecture Diagram",id:"system-architecture-diagram",level:2},{value:"Architecture Layers",id:"architecture-layers",level:2},{value:"\ud83c\udf10 Application Layer",id:"-application-layer",level:4},{value:"\ud83c\udfaf Kamiwaza Services Layer",id:"-kamiwaza-services-layer",level:4},{value:"\ud83d\udee0\ufe0f Core Infrastructure Services",id:"\ufe0f-core-infrastructure-services",level:4},{value:"\ud83d\udd27 Orchestration &amp; Compute Foundation",id:"-orchestration--compute-foundation",level:4},{value:"Technology Stack",id:"technology-stack",level:2}];function d(e){const r={h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",mermaid:"mermaid",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.header,{children:(0,a.jsx)(r.h1,{id:"platform-architecture-overview",children:"Platform Architecture Overview"})}),"\n",(0,a.jsx)(r.p,{children:"Kamiwaza is a modular, multi-layered platform designed for scalability, flexibility, and enterprise-grade performance. This document provides a high-level overview of its key architectural components and the technologies that power them."}),"\n",(0,a.jsx)(r.h2,{id:"system-architecture-diagram",children:"System Architecture Diagram"}),"\n",(0,a.jsx)(r.p,{children:"The diagram below illustrates the layered architecture of the Kamiwaza platform, from the underlying infrastructure to the user-facing applications. Each layer provides a distinct set of capabilities, creating a robust and maintainable system."}),"\n",(0,a.jsx)(r.mermaid,{value:"flowchart BT\r\n    subgraph AppLayer[Application Layer]\r\n        direction LR\r\n        Frontend[Kamiwaza Frontend]\r\n        ClientSDK[Client SDK]\r\n        AppGarden[App Garden]\r\n    end\r\n\r\n    subgraph KamiwazaServices[Kamiwaza Services Layer]\r\n        direction LR\r\n        FastAPI[FastAPI Gateway]\r\n        subgraph Services[Microservices]\r\n            Auth[Authentication]\r\n            ModelRepo[Model Repository]\r\n            ModelServe[Model Serving]\r\n            VectorDB[Vector Databases]\r\n            Catalog[Data Catalog]\r\n            More[...]\r\n        end\r\n        FastAPI --\x3e Services\r\n    end\r\n\r\n    subgraph CoreServices[Core Infrastructure Services]\r\n        direction LR\r\n        Traefik[Traefik Router]\r\n        DB[(CockroachDB)]\r\n        ETCD[etcd Cluster]\r\n    end\r\n\r\n    subgraph Foundation[Orchestration & Compute Foundation]\r\n        direction LR\r\n        Ray[Ray Serve]\r\n        Swarm[Docker Swarm]\r\n        HW[Hardware / Cloud]\r\n    end\r\n\r\n    AppLayer -- Consumes --\x3e KamiwazaServices\r\n    KamiwazaServices -- Built On --\x3e CoreServices\r\n    CoreServices -- Runs On --\x3e Foundation"}),"\n",(0,a.jsx)(r.h2,{id:"architecture-layers",children:"Architecture Layers"}),"\n",(0,a.jsx)(r.h4,{id:"-application-layer",children:"\ud83c\udf10 Application Layer"}),"\n",(0,a.jsx)(r.p,{children:"This is where users and developers interact with Kamiwaza."}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"Kamiwaza Frontend"}),": The primary web-based user interface for managing the platform."]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"Client SDK"}),": A Python SDK for programmatically interacting with Kamiwaza's APIs."]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"App Garden"}),": A platform for discovering and deploying pre-packaged AI applications and services."]}),"\n"]}),"\n",(0,a.jsx)(r.h4,{id:"-kamiwaza-services-layer",children:"\ud83c\udfaf Kamiwaza Services Layer"}),"\n",(0,a.jsx)(r.p,{children:"The core business logic of the platform, exposed via a central API gateway."}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"FastAPI Gateway"}),": A high-performance API gateway that coordinates all requests."]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"Microservices"}),": A suite of specialized services handling concerns like Authentication, Model Management, Vector DB abstraction (Milvus, Qdrant), and more."]}),"\n"]}),"\n",(0,a.jsx)(r.h4,{id:"\ufe0f-core-infrastructure-services",children:"\ud83d\udee0\ufe0f Core Infrastructure Services"}),"\n",(0,a.jsx)(r.p,{children:"The essential backend services that support the entire platform."}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"Traefik Router"}),": A powerful reverse proxy and load balancer that manages all inbound network traffic and provides SSL termination."]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"CockroachDB"}),": The primary database\u2014a distributed, resilient SQL database for all application data."]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"etcd"}),": A distributed key-value store used for service discovery and critical configuration management across the cluster."]}),"\n"]}),"\n",(0,a.jsx)(r.h4,{id:"-orchestration--compute-foundation",children:"\ud83d\udd27 Orchestration & Compute Foundation"}),"\n",(0,a.jsx)(r.p,{children:"The base layer that provides the compute resources and orchestration to run everything else."}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"Ray Serve"}),": A scalable model-serving framework used for deploying and managing AI models."]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"Docker Swarm"}),": The container orchestration engine that manages the lifecycle of all containerized services."]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"Hardware / Cloud"}),": The physical servers or cloud instances (e.g., AWS, GCP, Azure) that provide the underlying CPU and GPU resources."]}),"\n"]}),"\n",(0,a.jsx)(r.h2,{id:"technology-stack",children:"Technology Stack"}),"\n",(0,a.jsxs)(r.table,{children:[(0,a.jsx)(r.thead,{children:(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.th,{children:"Category"}),(0,a.jsx)(r.th,{children:"Technologies"})]})}),(0,a.jsxs)(r.tbody,{children:[(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:(0,a.jsx)(r.strong,{children:"Backend"})}),(0,a.jsx)(r.td,{children:"Python 3.10, FastAPI, Ray, SQLAlchemy, Pydantic"})]}),(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:(0,a.jsx)(r.strong,{children:"Frontend"})}),(0,a.jsx)(r.td,{children:"React 18, Material-UI, Tailwind CSS, Axios"})]}),(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:(0,a.jsx)(r.strong,{children:"Databases"})}),(0,a.jsx)(r.td,{children:"CockroachDB, Milvus, Qdrant, etcd"})]}),(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:(0,a.jsx)(r.strong,{children:"Infrastructure"})}),(0,a.jsx)(r.td,{children:"Docker Swarm, Traefik, DataHub, JupyterHub"})]})]})]})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>c});var i=n(96540);const a={},t=i.createContext(a);function s(e){const r=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(t.Provider,{value:r},e.children)}}}]);