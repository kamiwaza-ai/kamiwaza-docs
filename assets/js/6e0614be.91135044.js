"use strict";(self.webpackChunkkamiwaza_docs=self.webpackChunkkamiwaza_docs||[]).push([[6750],{62429:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"installation/linux_macos_tarball","title":"Community Edition Installation on Linux and macOS","description":"This guide covers installing Kamiwaza Community Edition on Linux and macOS using the pre-built tarball bundles.","source":"@site/versioned_docs/version-0.5.1/installation/linux_macos_tarball.md","sourceDirName":"installation","slug":"/installation/linux_macos_tarball","permalink":"/0.5.1/installation/linux_macos_tarball","draft":false,"unlisted":false,"tags":[],"version":"0.5.1","frontMatter":{},"sidebar":"mainSidebar","previous":{"title":"System Requirements","permalink":"/0.5.1/installation/system_requirements"},"next":{"title":"Windows Installation Guide","permalink":"/0.5.1/installation/windows_installation_guide"}}');var s=a(74848),r=a(28453);const t={},l="Community Edition Installation on Linux and macOS",o={},d=[{value:"Before you start",id:"before-you-start",level:2},{value:"macOS (Sequoia 15+)",id:"macos-sequoia-15",level:2},{value:"1) Install Homebrew and core tools",id:"1-install-homebrew-and-core-tools",level:3},{value:"2) Install Docker Desktop",id:"2-install-docker-desktop",level:3},{value:"3) Configure Python 3.10 with pyenv",id:"3-configure-python-310-with-pyenv",level:3},{value:"4) Install Node.js 22 with NVM",id:"4-install-nodejs-22-with-nvm",level:3},{value:"5) Download and install Kamiwaza (tarball)",id:"5-download-and-install-kamiwaza-tarball",level:3},{value:"Linux (Ubuntu 22.04 and 24.04 LTS)",id:"linux-ubuntu-2204-and-2404-lts",level:2},{value:"1) <strong>[For Ubuntu 24.04 only]</strong> Install Python 3.10",id:"1-for-ubuntu-2404-only-install-python-310",level:3},{value:"2) System update and core packages",id:"2-system-update-and-core-packages",level:3},{value:"3) Node.js 22 with NVM",id:"3-nodejs-22-with-nvm",level:3},{value:"4) Docker Engine + Compose v2",id:"4-docker-engine--compose-v2",level:3},{value:"5) Install CockroachDB and additional dependencies",id:"5-install-cockroachdb-and-additional-dependencies",level:3},{value:"6) (Optional) NVIDIA GPU support",id:"6-optional-nvidia-gpu-support",level:3},{value:"7) Download and install Kamiwaza (tarball)",id:"7-download-and-install-kamiwaza-tarball",level:3},{value:"Start the platform",id:"start-the-platform",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Notes",id:"notes",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"community-edition-installation-on-linux-and-macos",children:"Community Edition Installation on Linux and macOS"})}),"\n",(0,s.jsx)(n.p,{children:"This guide covers installing Kamiwaza Community Edition on Linux and macOS using the pre-built tarball bundles."}),"\n",(0,s.jsx)(n.h2,{id:"before-you-start",children:"Before you start"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Review the ",(0,s.jsx)(n.a,{href:"/0.5.1/installation/system_requirements",children:"System Requirements"})]}),"\n",(0,s.jsx)(n.li,{children:"Ensure you have administrator/sudo privileges"}),"\n",(0,s.jsx)(n.li,{children:"Recommended: Latest Docker Desktop (macOS) or Docker Engine (Linux)"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"macos-sequoia-15",children:"macOS (Sequoia 15+)"}),"\n",(0,s.jsx)(n.h3,{id:"1-install-homebrew-and-core-tools",children:"1) Install Homebrew and core tools"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"\r\nbrew update\r\nbrew install pyenv pyenv-virtualenv docker cairo gobject-introspection jq cfssl etcd cmake\r\nbrew install cockroachdb/tap/cockroach\n'})}),"\n",(0,s.jsx)(n.h3,{id:"2-install-docker-desktop",children:"2) Install Docker Desktop"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'brew install --cask docker\r\nopen -a Docker\r\n# optional if Docker created files as root\r\nsudo chown -R "$(whoami)":staff ~/.docker || true\n'})}),"\n",(0,s.jsx)(n.h3,{id:"3-configure-python-310-with-pyenv",children:"3) Configure Python 3.10 with pyenv"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"echo 'export PATH=\"$HOME/.pyenv/bin:$PATH\"' >> ~/.zshrc\r\necho 'eval \"$(pyenv init -)\"' >> ~/.zshrc\r\necho 'eval \"$(pyenv virtualenv-init -)\"' >> ~/.zshrc\r\nsource ~/.zshrc\r\npyenv install 3.10\r\npyenv local 3.10\n"})}),"\n",(0,s.jsx)(n.h3,{id:"4-install-nodejs-22-with-nvm",children:"4) Install Node.js 22 with NVM"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash\r\nexport NVM_DIR="${XDG_CONFIG_HOME:-$HOME/.nvm}"\r\n[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"\r\nnvm install 22\n'})}),"\n",(0,s.jsx)(n.h3,{id:"5-download-and-install-kamiwaza-tarball",children:"5) Download and install Kamiwaza (tarball)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"mkdir -p ~/kamiwaza && cd ~/kamiwaza\r\n# Example for 0.5.1 (replace with the latest available version if needed)\r\ncurl -L -O https://github.com/kamiwaza-ai/kamiwaza-community-edition/raw/main/kamiwaza-community-0.5.1-OSX.tar.gz\r\ntar -xvf kamiwaza-community-0.5.1-OSX.tar.gz\r\nbash install.sh --community\n"})}),"\n",(0,s.jsx)(n.h2,{id:"linux-ubuntu-2204-and-2404-lts",children:"Linux (Ubuntu 22.04 and 24.04 LTS)"}),"\n",(0,s.jsxs)(n.h3,{id:"1-for-ubuntu-2404-only-install-python-310",children:["1) ",(0,s.jsx)(n.strong,{children:"[For Ubuntu 24.04 only]"})," Install Python 3.10"]}),"\n",(0,s.jsx)(n.p,{children:"Kamiwaza CE requires Python 3.10. These commands will install Python 3.10 on Ubuntu 24.04."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo apt update\r\nsudo apt install software-properties-common -y\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo add-apt-repository ppa:deadsnakes/ppa\r\nsudo apt update && sudo apt upgrade -y\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo apt install -y python3.10\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo ln -sf /usr/bin/python3.10 /usr/local/bin/python\n"})}),"\n",(0,s.jsx)(n.h3,{id:"2-system-update-and-core-packages",children:"2) System update and core packages"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo apt update && sudo apt upgrade -y\r\nsudo apt install -y python3.10 python3.10-dev libpython3.10-dev python3.10-venv golang-cfssl python-is-python3 etcd-client net-tools curl jq libcairo2-dev libgirepository1.0-dev\n"})}),"\n",(0,s.jsx)(n.h3,{id:"3-nodejs-22-with-nvm",children:"3) Node.js 22 with NVM"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash\r\nexport NVM_DIR="${XDG_CONFIG_HOME:-$HOME/.nvm}"\r\n[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"\r\nnvm install 22\n'})}),"\n",(0,s.jsx)(n.h3,{id:"4-docker-engine--compose-v2",children:"4) Docker Engine + Compose v2"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'sudo apt install -y apt-transport-https ca-certificates curl software-properties-common\r\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\r\necho "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\r\nsudo apt update\r\nsudo apt install -y docker-ce docker-ce-cli containerd.io\r\nsudo mkdir -p /usr/local/lib/docker/cli-plugins\r\nsudo curl -SL "https://github.com/docker/compose/releases/download/v2.39.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/lib/docker/cli-plugins/docker-compose\r\nsudo chmod +x /usr/local/lib/docker/cli-plugins/docker-compose\r\nsudo usermod -aG docker $USER\r\nsudo chown $USER:$USER /var/run/docker.sock\r\n# Log out and back in (or reboot) so the docker group membership takes effect\n'})}),"\n",(0,s.jsx)(n.h3,{id:"5-install-cockroachdb-and-additional-dependencies",children:"5) Install CockroachDB and additional dependencies"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"wget -qO- https://binaries.cockroachdb.com/cockroach-v23.2.12.linux-amd64.tgz | tar xvz\r\nsudo cp cockroach-v23.2.12.linux-amd64/cockroach /usr/local/bin\r\nsudo apt install -y libcairo2-dev libgirepository1.0-dev\n"})}),"\n",(0,s.jsx)(n.h3,{id:"6-optional-nvidia-gpu-support",children:"6) (Optional) NVIDIA GPU support"}),"\n",(0,s.jsx)(n.p,{children:"Use this section if all of the following are true:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"You are on Ubuntu 22.04 or 24.04 (bare metal or a VM with GPU passthrough)"}),"\n",(0,s.jsx)(n.li,{children:"The host has an NVIDIA GPU and you want GPU acceleration"}),"\n",(0,s.jsx)(n.li,{children:"You are not on macOS (macOS does not support NVIDIA GPUs)"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["If you are installing on an Ubuntu 22.04 or 24.04 instance with an NVIDIA GPU where ",(0,s.jsx)(n.code,{children:"nvidia-smi"})," doesn't work, you likely need to do this. However, many cloud-provided images come with NVIDIA drivers pre-installed."]}),"\n",(0,s.jsx)(n.p,{children:"Install the recommended NVIDIA driver, then the NVIDIA Container Toolkit, and configure Docker:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# 1) Install the recommended NVIDIA driver\r\n## If 'ubuntu-drivers' is missing, install it first:\r\n##   sudo apt update && sudo apt install -y ubuntu-drivers-common\r\nsudo apt update\r\nsudo ubuntu-drivers autoinstall\n"})}),"\n",(0,s.jsx)(n.p,{children:"Perform system reboot:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo reboot\n"})}),"\n",(0,s.jsx)(n.p,{children:"After the reboot, install the container toolkit and configure Docker:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# 2) Install NVIDIA Container Toolkit repository and package\r\ncurl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | \\\r\n  sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg\r\ncurl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \\\r\n  sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | \\\r\n  sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list > /dev/null\r\nsudo apt update\r\nsudo apt install -y nvidia-container-toolkit\r\n\r\n# 3) Configure Docker to use the NVIDIA runtime and restart Docker\r\nsudo nvidia-ctk runtime configure --runtime=docker\r\nsudo systemctl restart docker\r\n\r\n# 4) Test GPU access from Docker (should print nvidia-smi output and exit)\r\ndocker run --rm --gpus all nvidia/cuda:12.4.1-runtime-ubuntu22.04 nvidia-smi\n"})}),"\n",(0,s.jsx)(n.p,{children:"Verify the driver is installed with:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"nvidia-smi\n"})}),"\n",(0,s.jsx)(n.p,{children:"Notes:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"If Secure Boot is enabled, you may be prompted to enroll MOK during driver installation."}),"\n",(0,s.jsxs)(n.li,{children:["On some servers, you may prefer ",(0,s.jsx)(n.code,{children:"nvidia-driver-550-server"}),". If you need a specific version: ",(0,s.jsx)(n.code,{children:"sudo apt install -y nvidia-driver-550-server"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"nvidia-docker2"})," meta-package is no longer required; use ",(0,s.jsx)(n.code,{children:"nvidia-container-toolkit"})," with ",(0,s.jsx)(n.code,{children:"nvidia-ctk"})," instead."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"7-download-and-install-kamiwaza-tarball",children:"7) Download and install Kamiwaza (tarball)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"mkdir -p ~/kamiwaza && cd ~/kamiwaza\r\n# Example for 0.5.1 (replace with the latest available version if needed)\r\nwget https://github.com/kamiwaza-ai/kamiwaza-community-edition/raw/main/kamiwaza-community-0.5.1-UbuntuLinux.tar.gz\r\ntar -xvf kamiwaza-community-0.5.1-UbuntuLinux.tar.gz\r\nbash install.sh --community\n"})}),"\n",(0,s.jsx)(n.h2,{id:"start-the-platform",children:"Start the platform"}),"\n",(0,s.jsx)(n.p,{children:"After installation completes:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Community Edition\r\nbash startup/kamiwazad.sh start\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Access the web console at ",(0,s.jsx)(n.code,{children:"https://localhost"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Default Username: ",(0,s.jsx)(n.code,{children:"admin"})]}),"\n",(0,s.jsxs)(n.li,{children:["Default Password: ",(0,s.jsx)(n.code,{children:"kamiwaza"})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Docker permissions: ensure your user is in the ",(0,s.jsx)(n.code,{children:"docker"})," group (Linux) and re-login/reboot."]}),"\n",(0,s.jsx)(n.li,{children:"Python version: Kamiwaza requires Python 3.10. If you used 3.11+, reinstall 3.10 and rerun the installer."}),"\n",(0,s.jsxs)(n.li,{children:["GPU: For Linux NVIDIA issues, validate ",(0,s.jsx)(n.code,{children:"nvidia-smi"})," works inside Docker as shown above. For Windows GPU setup, see ",(0,s.jsx)(n.a,{href:"/0.5.1/installation/gpu_setup_guide",children:"Windows GPU Setup Guide"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Replace example tarball URLs with the latest version as needed."}),"\n",(0,s.jsx)(n.li,{children:"The installer sets up virtual environments, required packages, and initial configuration automatically."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,a)=>{a.d(n,{R:()=>t,x:()=>l});var i=a(96540);const s={},r=i.createContext(s);function t(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);