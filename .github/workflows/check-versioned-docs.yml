name: Check Versioned Docs

on:
  pull_request:
    branches:
      - main
    paths:
      - 'docs/docs/**'
      - 'docs/versioned_docs/**'
      - 'docs/versions.json'

jobs:
  check-versioning:
    name: Verify docs are versioned
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Need full history to compare with base

      - name: Check if versioning was performed
        run: |
          echo "Checking if documentation changes were properly versioned..."

          # Get the base branch (main)
          git fetch origin main:main

          # Check if docs/docs/ has changes
          DOCS_CHANGED=$(git diff --name-only origin/main...HEAD | grep '^docs/docs/' || true)

          # Check if versioned_docs/ or versions.json has changes
          VERSION_CHANGED=$(git diff --name-only origin/main...HEAD | grep -E '^docs/(versioned_docs/|versions\.json)' || true)

          if [ -n "$DOCS_CHANGED" ]; then
            echo "✓ Changes detected in docs/docs/:"
            echo "$DOCS_CHANGED" | sed 's/^/  - /'
            echo ""

            if [ -z "$VERSION_CHANGED" ]; then
              echo "❌ ERROR: Documentation changes detected but no versioning was performed!"
              echo ""
              echo "You must version the documentation before submitting a PR to main."
              echo ""
              echo "To fix this, run one of the following from your feature branch:"
              echo ""
              echo "Option A - Create new version (for releases):"
              echo "  npm run version-up -- 0.6.0"
              echo ""
              echo "Option B - Update existing version (for fixes):"
              echo "  cd docs"
              echo "  export DOCS_VERSION=0.5.1"
              echo "  rm -rf versioned_docs/version-\$DOCS_VERSION versioned_sidebars/version-\$DOCS_VERSION-sidebars.json"
              echo "  node -e \"const fs=require('fs');const p='versions.json';const v=JSON.parse(fs.readFileSync(p));fs.writeFileSync(p, JSON.stringify(v.filter(x=>x!=='\$DOCS_VERSION'), null, 2)+'\\n');\""
              echo "  npm run clear"
              echo "  npm run docusaurus -- docs:version \$DOCS_VERSION"
              echo "  npm run build"
              echo ""
              echo "Then commit the versioned docs changes and push to your branch."
              echo ""
              echo "See docs/README.md for more information."
              exit 1
            else
              echo "✓ Versioning detected - changes found in:"
              echo "$VERSION_CHANGED" | sed 's/^/  - /'
              echo ""
              echo "✅ Documentation changes are properly versioned!"
            fi
          else
            echo "ℹ️  No changes to docs/docs/ detected in this PR."
            echo "   Versioning check skipped."
          fi
